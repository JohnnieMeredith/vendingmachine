package com.example.view;

import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.Optional;

import com.example.controller.VendingMachine;
import com.example.model.Item;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * VendingMachineGUI simulates the use of a vending machine for the purpose of
 * testing
 * 
 * @author Johnnie Meredith
 * @version 1.0
 */
public class VendingMachineGUI extends javax.swing.JFrame {

    private VendingMachine vendingMachine;
    private static Logger logger = LogManager.getLogger(VendingMachineGUI.class);
    String path;

    /**
     * Creates new form VendingMachineGUI
     */
    public VendingMachineGUI() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        readoutTextField = new javax.swing.JTextField();
        currencyTextField = new javax.swing.JTextField();
        selectionTextField = new javax.swing.JTextField();
        addCurrencyButton = new javax.swing.JButton();
        enterSelectionButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        vendingTextField = new javax.swing.JTextField();
        pathButton = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1600, 856));
        setResizable(false);

        readoutTextField.setEditable(false);
        readoutTextField.setBackground(new java.awt.Color(40, 40, 40));
        readoutTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        readoutTextField.setForeground(new java.awt.Color(0, 128, 0));
        readoutTextField.setText("Enter Payment to Proceed....");

        currencyTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        currencyTextField.setText("$0.00");
        currencyTextField.addFocusListener(new FocusListener() {
            @Override
            public void focusLost(final FocusEvent pE) {
            }

            @Override
            public void focusGained(final FocusEvent pE) {
                currencyTextField.selectAll();
            }
        });

        selectionTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectionTextField.setText("Enter your selection...");
        selectionTextField.addFocusListener(new FocusListener() {
            @Override
            public void focusLost(final FocusEvent pE) {
            }

            @Override
            public void focusGained(final FocusEvent pE) {
                selectionTextField.selectAll();
            }
        });

        addCurrencyButton.setText("Add $");
        addCurrencyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCurrencyButtonActionPerformed(evt);
            }
        });

        enterSelectionButton.setText("Enter");
        enterSelectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterSelectionButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        vendingTextField.setEditable(false);
        vendingTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        vendingTextField.setText("VENDING SLOT");

        pathButton.setText("Json GUI");
        pathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathButtonActionPerformed(evt);
            }
        });

        totalLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalLabel.setText("Total:");
        totalLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout.createSequentialGroup().addGap(25, 25, 25).addGroup(layout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(readoutTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 1542,
                                        Short.MAX_VALUE)
                                .addComponent(jScrollPane3))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(currencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(selectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(vendingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addCurrencyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(enterSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout.createSequentialGroup().addGap(36, 36, 36)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(readoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(currencyTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 52,
                                        Short.MAX_VALUE)
                                .addComponent(addCurrencyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(selectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(enterSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vendingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)));

        pack();
    }// </editor-fold>

    /**
     * 
     * @param vendingMachine the vending machine logic controller
     */
    public void setVendingMachine(VendingMachine vendingMachine) {
        this.vendingMachine = vendingMachine;
        updateProductList();
    }

    /**
     * Gets input containing an amount of currency. Adds that currency to the
     * vending machine. Displays the current total.
     * 
     * @param evt there for overriding purposes
     */
    private void addCurrencyButtonActionPerformed(ActionEvent evt) {
        String currency = currencyTextField.getText();
        int intCurrency = vendingMachine.getIntValueOfString(currency);

        vendingMachine.addToPaymentAmount(intCurrency);
        readoutTextField.setText(String.format("Added %s to total", currency));
        totalLabel.setText("$" + vendingMachine.getStringValueOfMoney(vendingMachine.getPaymentAmount()));
        logger.debug("CURRENCY INSERTED: Added ${} to total", currency);
    }

    /**
     * Takes the selection input from the TextField. Checks if the selection exists.
     * Initiates application logic to purchase the item.
     * 
     * @param evt unused: there for overriding purposes
     */
    private void enterSelectionButtonActionPerformed(ActionEvent evt) {
        String selection = selectionTextField.getText().toUpperCase();

        if (selection.length() > 1 && selection.length() < 3) {
            Optional<Item> item = vendingMachine.getUserSelection(selection);
            Item lookUp;
            if (item.isPresent()) {
                lookUp = item.get();
                if (vendingMachine.buyItem(item.get())) {
                    logger.debug("ITEM SELECTED: Attempting purchase.");
                    item.ifPresent(value -> dispense(value));
                    updateProductList();
                } else {
                    int owed = vendingMachine.getPaymentAmount() - lookUp.getPriceinCents();
                    String owedString = vendingMachine.getStringValueOfMoney(owed);
                    readoutTextField.setText(String.format("Insufficient Funds. %s more needed.", owedString));
                }
            } else
                readoutTextField.setText("Invalid Selection: Unfilled Bay.");

        } else
            readoutTextField.setText("Invalid Selection: Selection should be a letter followed by a number");

    }

    /**
     * Changes view to the Json updater GUI.
     * 
     * @param evt unused: there for overriding purposes
     */
    private void pathButtonActionPerformed(ActionEvent evt) {
        ProductUpdateGUI updateGUI = new ProductUpdateGUI();
        updateGUI.setVisible(true);
        getThis().dispose();
    }

    /**
     * Initiates controller logic to dispense the item and refund. Shows visual
     * representation on the GUI.
     * 
     * @param item
     */
    private void dispense(Item item) {
        int refund = vendingMachine.getPayment().getTotal();
        String refundText = vendingMachine.getStringValueOfMoney(refund);
        String name = item.getName();
        vendingTextField.setText(name);
        updateProductList();
        totalLabel.setText("$0.00");
        vendingMachine.refundMoney(refundText);
        readoutTextField.setText(String.format("Dispensing %s and $%s in change.", name, refundText));

    }

    /**
     * Initiates controller to read the current inventory and write it to screen.
     */
    private void updateProductList() {
        jTextArea1.setText(vendingMachine.printProductList());
        logger.debug("UPDATED: Product List.");
    }

    /**
     * Convenience method to return a reference to this VendingMachineGUI object.
     * 
     * @return this instance of VendingMachineGUI
     */
    private VendingMachineGUI getThis() {
        return this;
    }

    /**
     * Sets look and feel and makes the window visible.
     */
    public void run() {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.fatal(ex);
        } catch (InstantiationException ie) {
            logger.fatal(ie);
        } catch (IllegalAccessException iae) {
            logger.fatal(iae);
        } catch (javax.swing.UnsupportedLookAndFeelException ulafe) {
            logger.fatal(ulafe);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                getThis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton addCurrencyButton;
    private javax.swing.JTextField currencyTextField;
    private javax.swing.JButton enterSelectionButton;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField vendingTextField;
    private javax.swing.JButton pathButton;
    private javax.swing.JTextField readoutTextField;
    private javax.swing.JTextField selectionTextField;
    // End of variables declaration
}
